#another one
#from https://github.com/MOCSCTF/CTF-Write-UP/tree/master/Crypto/RTLXHA2021%20-%20Prime%20Wars

#import libnum
n1 = 20225013897290783263292723058084848811523002787119024218365242009559797028761617388268480058691576247508870274978147583538765794837785341547238670547369755179010406653011519759169651403947253327858742061368490611910022427261339592245605453104890630824331596068644298552793328335884558593947497608978410349283753863437466440927014983920679665771156492645059730697829453584895513246073619930299335770140615975759325121479682808835819713089160780851590301251784505563517778316575219655865376069400405775508161408277862140573798200439957847855157637336999470777292889657861825119106643560873797612409812538539506012458851
n2 = 20225013897290783263292723058084848811523002787119024218365242009559797028761617388268480058691576247508870274978147583538765794837785341547238670547369755179010406653011519759169651403947253327858742061368490611910022427261339592245605453104890630824331596068644298552793328335884558593947497608978410349283753863437466440927014983920679665771156492645059730697829453584895513246073619930299335770140615975759325121479682808835819713089160780851590301251784505563517778316575219655865376069400405775508161408277862140573798200439957847855157637336999470777292889657861825119106643560873797612409812538539506012458851
c1 = 15394086530533343155510404807512282441050590962834895558558443308425175069509918346519298072023913673732524730456910324760788991710823627644918594020654514850498459307705681215133460523135414295191629262895298344400077693563976628855158699621173024995484933687247786577754839648341525562051816155896897921475560753800964634924905797912574221327195255036369898216524599298523294248645413306772428646337205019294396912802082845565917301169149501805523388157885994226671557238241525535067461603556183146955271554068132759883745754909995556699454214721612250321059032072834867045856851224329135614508774799778844736230822
c2 = 1866455185461867
e = 3


def gcd(a, b):
   if a < b:
     a, b = b, a
   while b != 0:
     temp = a % b
     a = b
     b = temp
   return a

p=gcd(n1,n2)

q1=n1//p
q2=n2//p

phi_N1 = (p-1)*(q1-1)
phi_N2 = (p-1)*(q2-1)
#d1 = libnum.modular.invmod(e,phi_N1)
#d2 = libnum.modular.invmod(e,phi_N2)
d1 = pow(e,-1,phi_N1)
d2 = pow(e,-1,phi_N2)

ans1 = pow(c1,d1,n1)
ans2=pow(c2,d2,n2)
print(ans1)
print(int(str(ans1)+str(ans2)))